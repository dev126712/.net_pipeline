name: Docker CI/CD - .NET API

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_NAME: 'test'
  IMAGE_REPOSITORY: ${{ github.repository }} 
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-scan-push:
    name: Build, Scan, and Push
    runs-on: ubuntu-latest

    steps:
    - name: checkout repo
      uses: actions/checkout@v4

    - name: Build the Docker images
      run: |
        docker build ./ -t dev126712/env:latest

    - name: set up docker
      uses: docker/setup-buildx-action@v2

    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install -y curl
        curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin v0.57.0

    #- name: Login to GitHub Container Registery
    #  run: echo "{{ secrets.GHCR_PAT }}" | docker login ghcr.io -u {{ github.actor }} --password-stdin
  
    - name: Download Trivy vulnerability database
      run: trivy image --download-db-only


    
      
    - name: Run Trivy vulnerability scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}
        format: 'table'
        exit-code: '1' # Fail the pipeline if HIGH or CRITICAL severity is found
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'
        
    - name: Save Image Tag Artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-tag
        path: ${{ runner.temp }}/.image-tag
        
    - run: echo "${{ env.IMAGE_TAG }}" > ${{ runner.temp }}/.image-tag
