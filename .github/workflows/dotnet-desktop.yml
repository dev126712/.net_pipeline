name: Docker CI/CD - .NET API

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_NAME: 'test'
  IMAGE_REPOSITORY: ${{ github.repository }} # Uses the name of the GitHub repo
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-scan-push:
    name: Build, Scan, and Push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

  
          
    # 3. Security Scan with Trivy
    # We pull the image back down from GHCR to ensure we are scanning the final pushed artifact
    - name: Run Trivy vulnerability scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:${{ env.IMAGE_TAG }}
        format: 'table'
        exit-code: '1' # Fail the pipeline if HIGH or CRITICAL severity is found
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'
        
    # 4. Optional: Upload Image Tag as an Artifact
    # Useful for later steps that need the full tag
    - name: Save Image Tag Artifact
      uses: actions/upload-artifact@v4
      with:
        name: deployment-tag
        path: ${{ runner.temp }}/.image-tag
        
    - run: echo "${{ env.IMAGE_TAG }}" > ${{ runner.temp }}/.image-tag
